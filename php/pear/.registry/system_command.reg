a:12:{s:8:"provides";a:1:{s:20:"class;System_Command";a:3:{s:4:"type";s:5:"class";s:4:"name";s:14:"System_Command";s:8:"explicit";b:1;}}s:8:"filelist";a:2:{s:11:"Command.php";a:4:{s:4:"role";s:3:"php";s:14:"baseinstalldir";s:6:"System";s:6:"md5sum";s:32:"3969a5841338f38a7b8424e100dada45";s:12:"installed_as";s:36:"E:\xampp\php\pear\System\Command.php";}s:7:"dirtree";a:1:{s:24:"E:\xampp\php\pear\System";b:1;}}s:7:"package";s:14:"System_Command";s:7:"summary";s:58:"PEAR::System_Command is a commandline execution interface.";s:11:"description";s:646:"System_Command is a commandline execution interface.
Running functions from the commandline can be risky if the proper precautions are
not taken to escape the shell arguments and reaping the exit status properly.  This class
provides a formal interface to both, so that you can run a system command as comfortably as
you would run a php function, with full pear error handling as results on failure.
It is important to note that this class, unlike other implementations, distinguishes between
output to stderr and output to stdout.  It also reports the exit status of the command.  
So in every sense of the word, it gives php shell capabilities.";s:11:"maintainers";a:2:{i:0;a:4:{s:6:"handle";s:6:"dallen";s:4:"name";s:9:"Dan Allen";s:5:"email";s:14:"dallen@php.net";s:4:"role";s:4:"lead";}i:1;a:4:{s:6:"handle";s:2:"aj";s:4:"name";s:16:"Anders Johannsen";s:5:"email";s:20:"anders@johannsen.com";s:4:"role";s:9:"developer";}}s:7:"version";s:5:"1.0.2";s:12:"release_date";s:10:"2005-09-17";s:15:"release_license";s:11:"PHP License";s:13:"release_state";s:6:"stable";s:13:"release_notes";s:63:"Fix #828: assignement to $this
Fix #1985: default shell not set";s:13:"_lastmodified";i:1127747652;}